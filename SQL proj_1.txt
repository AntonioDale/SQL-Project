-- 1. What is the total amount each customer spent at the restaurant?
-- select
-- customer_id
-- from dannys_diner.sales;

select 
customer_id, sum(price)
from dannys_diner.sales
join dannys_diner.menu
on dannys_diner.sales.product_id = dannys_diner.menu.product_id
group by dannys_diner.sales.customer_id
order by sum(price) desc;

-- 2. How many days has each customer visited the restaurant?
select 
customer_id, count(distinct(order_date)) as num
from dannys_diner.sales
group by customer_id
order by customer_id asc;

select 
customer_id, count(order_date) as numero_pagamenti
from dannys_diner.sales
group by customer_id
order by customer_id asc;

-- 3. What was the first item from the menu purchased by each customer?
select
customer_id,
order_date, 
dannys_diner.sales.product_id,
product_name
from dannys_diner.sales 
join dannys_diner.menu 
on dannys_diner.menu.product_id = dannys_diner.sales.product_id
where dannys_diner.sales.order_date = '2021-01-01';

-- 4. What is the most purchased item on the menu and how many times was it purchased by all customers?
select 
count(dannys_diner.sales.product_id) as numero_vendite,
product_name as nome_prodotto
from dannys_diner.sales
join dannys_diner.menu
on dannys_diner.sales.product_id = dannys_diner.menu.product_id
group by dannys_diner.menu.product_name
order by numero_vendite asc;

select
customer_id,
count(product_id)
from dannys_diner.sales
where product_id = '3'
group by customer_id;

-- 6. Which item was purchased first by the customer after they became a member?
select 
dannys_diner.sales.customer_id,
order_date,
join_date,
rank() over(partition by dannys_diner.sales.customer_id order by order_date asc) 
from dannys_diner.sales
join dannys_diner.members
on dannys_diner.sales.customer_id = dannys_diner.members.customer_id
where order_date >= join_date;

-- 7. Which item was purchased just before the customer became a member?
select
dannys_diner.sales.customer_id,
dannys_diner.menu.product_name,
order_date,
join_date,
rank() over(partition by dannys_diner.sales.customer_id order by order_date desc) as rk
from dannys_diner.sales
join dannys_diner.members
on dannys_diner.sales.customer_id = dannys_diner.members.customer_id
join dannys_diner.menu
on dannys_diner.sales.product_id = dannys_diner.menu.product_id
where order_date < join_date;

-- 8. What is the total items and amount spent for each member before they became a member?
select
dannys_diner.sales.customer_id,
sum(price) totale_speso
from dannys_diner.sales
join dannys_diner.members
on dannys_diner.sales.customer_id = dannys_diner.members.customer_id
join dannys_diner.menu
on dannys_diner.sales.product_id = dannys_diner.menu.product_id
where order_date < join_date
group by dannys_diner.sales.customer_id;

-- 9.  If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?
select 
customer_id,
sum(case when dannys_diner.menu.product_name = 'sushi' then price*10*2
else price * 10 end)
from dannys_diner.menu
join dannys_diner.sales
on dannys_diner.sales.product_id = dannys_diner.menu.product_id
group by customer_id;

-- 10. In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi - how many points do customer A and B have at the end of January?
select dannys_diner.sales.customer_id,
sum(case when (dannys_diner.menu.product_id = 1 or join_date <= order_date) then price * 10 *2
else price * 10 end) punti
from dannys_diner.sales
join dannys_diner.members
on dannys_diner.sales.customer_id = dannys_diner.members.customer_id
join dannys_diner.menu
on dannys_diner.menu.product_id = dannys_diner.sales.product_id
group by dannys_diner.sales.customer_id;
